{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,eAAe,EAAC;;;;;;;UChH/B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNuC;;AAEvC,mDAAe","sources":["webpack://personal-portfolio/./src/skills.js","webpack://personal-portfolio/webpack/bootstrap","webpack://personal-portfolio/webpack/runtime/define property getters","webpack://personal-portfolio/webpack/runtime/hasOwnProperty shorthand","webpack://personal-portfolio/webpack/runtime/make namespace object","webpack://personal-portfolio/./src/index.js"],"sourcesContent":["const sectionContainer = document.querySelector(\".skills\");\nconst carousel = document.querySelector(\".skills-icons-carousel\");\nconst carouselChildrenBeforeInserts = [...carousel.children];\nconst cardWidth = document.querySelector(\".skill-card\").offsetWidth;\nconst cardsPerView = Math.round(carousel.offsetWidth / cardWidth);\nconsole.log(cardsPerView);\nconsole.log(carousel);\nconsole.log(\"hi\");\n\nconst initialScrollPosition = cardsPerView * cardWidth + 10 * cardsPerView;\n\n// carousel.scrollLeft = initialScrollPosition;\n\nlet isDragging = false;\nlet startingCursorX = null;\nlet startingScrollLeft = null;\nlet carouselTimeout;\n\nconst autoPlay = () => {\n  // automove the carousel one card width + gap px after timer ends\n  carouselTimeout = setTimeout(() => {\n    carousel.scrollLeft += cardWidth + 9;\n  }, 2500);\n};\nautoPlay();\n\n// copy the last few cards from the end to the beginning of the carousel\ncarouselChildrenBeforeInserts\n  .slice(-cardsPerView)\n  .reverse()\n  .forEach((card) => carousel.insertAdjacentHTML(\"afterbegin\", card.outerHTML));\n// copy the first few cards from the beginning to the end of the carousel\ncarouselChildrenBeforeInserts\n  .slice(0, cardsPerView)\n  .forEach((card) => carousel.insertAdjacentHTML(\"beforeend\", card.outerHTML));\n\nconst carouselChildrenAfterInserts = [...carousel.children];\n// const initialScrollPosition = carousel.scrollLeft;\n\nfunction dragStart(e) {\n  // records initial cursor position and scroll position of the carousel\n  console.log(e);\n  isDragging = true;\n  startingCursorX = e.touches[0].pageX;\n  startingScrollLeft = carousel.scrollLeft;\n  carousel.classList.add(\"dragging\");\n  carouselChildrenAfterInserts.forEach((skill) =>\n    skill.classList.remove(\"untouched\")\n  );\n}\n\nfunction dragging(e) {\n  if (!isDragging) return;\n  console.log(e, \"drag\");\n\n  // updates scroll position of carousel based on cursor movement\n  carousel.scrollLeft =\n    startingScrollLeft - (e.touches[0].pageX - startingCursorX);\n\n  // scroll position = initial scroll position - (dragging cursor position - initial cursor position)\n  // 0   = 0 - (x - 203)\n}\n\nfunction dragEnd() {\n  isDragging = false;\n  carousel.classList.remove(\"dragging\");\n  console.log(\"end\");\n}\n\nfunction infiniteScroll() {\n  // if the left end of the carousel is reached\n  if (carousel.scrollLeft === 0) {\n    carousel.classList.add(\"no-transition\");\n\n    carousel.scrollLeft = carousel.scrollWidth - 2 * initialScrollPosition + 10;\n\n    carousel.classList.remove(\"no-transition\");\n  }\n\n  // if the right end of the carousel is reached\n  if (carousel.scrollLeft === carousel.scrollWidth - carousel.offsetWidth) {\n    carousel.classList.add(\"no-transition\");\n\n    carousel.scrollLeft =\n      initialScrollPosition +\n      (initialScrollPosition - carousel.offsetWidth - 10);\n\n    // carousel.scrollLeft =\n    //   initialScrollPosition + cardWidth + (cardsPerView - 1) * 10;\n\n    carousel.classList.remove(\"no-transition\");\n  }\n\n  // cancel existing timeout while scrolling\n  clearTimeout(carouselTimeout);\n\n  // autoplay carousel not being hovered over or focused by user\n  if (\n    !sectionContainer.matches(\":active\") ||\n    !sectionContainer.matches(\":hover\")\n  )\n    autoPlay();\n  // if (!sectionContainer.matches(\"dragging\")) autoPlay();\n}\n\nfunction animateCarousel() {\n  carousel.addEventListener(\"touchmove\", dragging);\n  carousel.addEventListener(\"touchstart\", dragStart);\n  carousel.addEventListener(\"touchend\", dragEnd);\n  carousel.addEventListener(\"scroll\", infiniteScroll);\n}\n\nexport default animateCarousel;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import animateCarousel from \"./skills\";\n\nanimateCarousel();\n"],"names":[],"sourceRoot":""}